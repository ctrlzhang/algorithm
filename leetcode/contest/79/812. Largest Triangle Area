class Solution {
public:
    //p=(a+b+c)/2
    //ans=sqrt(p * (p-q) * (p-b) * (p-c))
    double largestTriangleArea(vector<vector<int>>& points) {
        int n = points.size();
        double ans = 0;
        for (int i = 0; i <= n - 3; i++) {
            for (int j = i + 1; j <= n - 2; j++) {
                for (int k = j + 1; k <= n - 1; k++) {
                    double a = dist(points[i], points[j]);
                    double b = dist(points[i], points[k]);
                    double c = dist(points[j], points[k]);
                    double p = (a + b + c) / 2;
                    double tmp = sqrt(p * (p - a) * (p - b) * (p - c));
                    if (tmp > ans) {
                        ans = tmp;
                    }
                }
            }
        }
        return ans;
    }
    
    double dist(vector<int>& l, vector<int>& r) {
        double l1 = l[0], l2 = l[1], r1 = r[0], r2 = r[1];
        return sqrt((l1 - r1) * (l1 - r1) + (l2 - r2) * (l2 - r2));
    }
};
