class Solution {
public:
    double findMaxAverage(vector<int>& nums, int k) {
        int n = nums.size();
        if(k == 0 || k > n) return 0;
        double arr[n];
        memset(arr, 0, sizeof(arr));
        
        arr[0] = nums[0];
        for(int i=1; i<n; i++) {
            arr[i] = arr[i-1] + nums[i];
        }
        
        double avg = -1e5;
        for(int i=0; i<=n-k; i++) {
            for(int j=k-1; i+j<n; j++) {
                if(i > 0) {
                    if((j+1) * avg < (arr[i+j] - arr[i-1])) {
                        avg = (arr[i+j] - arr[i-1]) / (j+1);
                    }
                } else {
                    if((j+1) * avg < arr[i+j]) {
                        avg = arr[i+j] / (j+1);
                    }
                }
            }
        }
        
        /*
        int n = nums.size();
        double ss[n + 1], mx = -1e4;
        ss[0] = 0.;
        for (int i = 0; i < n; ++i)
            ss[i + 1] = ss[i] + nums[i];
        for (int i = 0; i <= n - k; ++i) {
            for (int j = k; i + j <= n; ++j)
                if (j * mx < (ss[i + j] - ss[i]))
                    mx = (ss[i + j] - ss[i]) / j;
        }
        return mx;
        */
        
        return avg;
    }
};
