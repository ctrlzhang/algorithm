class Solution {
public:
    int projectionArea(vector<vector<int>>& grid) {
        //edge case
        if (grid.empty()) return 0;
        
        //x
        int ans = 0;
        int n = grid.size();
        map<int, vector<int>> ymp;
        map<int, vector<int>> zmp;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                //cout<<i<<" "<<j<<endl;
                int val = grid[i][j];
                if (grid[i][j] > 0) {
                    //cout<<"1";
                    //x
                    ++ans;
                    
                    //cout<<"2";
                    //y
                    if (ymp.find(j) == ymp.end()) {
                        ymp[j].push_back(0);
                        ymp[j].push_back(val);
                    } else {
                        if (val < ymp[j][0]) {
                            ymp[j][0] = val;
                        }
                        
                        if (val > ymp[j][1]) {
                            ymp[j][1] = val;
                        }
                    }
                    
                    //cout<<"3"<<endl;
                    //z
                    if (zmp.find(i) == zmp.end()) {
                        zmp[i].push_back(0);
                        zmp[i].push_back(val);
                    } else {
                        if (val < zmp[i][0]) {
                            zmp[i][0] = val;
                        }
                        
                        if (val > zmp[i][1]) {
                            zmp[i][1] = val;
                        }
                    }
                }
            }
        }
                                                    
        for (auto& it : ymp) {
            ans += it.second[1] - it.second[0];
        }
                                
        for (auto& it : zmp) {
            ans += it.second[1] - it.second[0];
        }
                                
        return ans;
    }
};
