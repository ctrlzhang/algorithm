class Solution {
public:
    int countBinarySubstrings(string s) {
        int l = s.length();
        string tmp = "";
        int ans = 0;
        for(int i = 1; i < l; i++) {
            int j = i;
            int cnt = 0;
            while(j > 0 && s[j] == s[i]) {
                j--;
                cnt++;
            }
            
            if(j >= 0) {
                while(j >= 0 && s[j] != s[i]) {
                    j--;
                    cnt--;
                    if(0 == cnt) {
                        ans++;
                        break;
                    }
                }
            }
        }
        
        return ans;
    }
};

class Solution {
public:
    int countBinarySubstrings(string s) {
        int n = s.length();
        vector<int> dp;
        for(int i = 0; i < n; i++) {
            int j = i;
            while(j < n && s[i] == s[j]) j++;
            dp.push_back(j - i);
            i = j - 1;
        }
        
        int ans = 0;
        for(int i = 1; i < dp.size(); i++) {
            ans += min(dp[i],dp[i-1]);
        }
        
        return ans;
    }
};
