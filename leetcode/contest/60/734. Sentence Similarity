class Solution {
public:
    bool areSentencesSimilar(vector<string>& words1, vector<string>& words2, vector<pair<string, string>> pairs) {
        //edge case
        if(words1.size() != words2.size()) return false;
        unordered_map<string, map<string, int>> mp;
        for(pair<string, string> p : pairs) {
            mp[p.first][p.second] = 1;
            mp[p.second][p.first] = 1;
        }
        
        unordered_map<string, int> mpA;
        for(string s : words1) {
            mpA[s] = 1;
        }
        
        unordered_map<string, int> mpB;
        for(string s : words2) {
            mpB[s] = 1;
        }
        
        int n = words1.size();
        for(int i = 0; i < n; i++) {
            string s1 = words1[i];
            string s2 = words2[i];
            if(s1 == s2) continue;
            if(mp.find(s1) == mp.end()) return false;
            if(mp[s1].find(s2) == mp[s1].end()) return false;
        }
        
        return true;
    }
};
