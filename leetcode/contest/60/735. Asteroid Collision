class Solution {
public:
    vector<int> asteroidCollision(vector<int>& v) {
        bool finish = false;
        int n = v.size();
        if(n == 0 || 1 == n) return v;
        while(!finish) {
            finish = true;
            stack<int> st;
            for(int i = 0; i < v.size(); i++) {
                if(st.empty()) {
                    st.push(v[i]);
                } else {
                    int cur = st.top();
                    if(cur > 0 && v[i] < 0) {
                        st.pop();
                        if(abs(cur) > abs(v[i])) {
                            st.push(cur);
                        }

                        if(abs(cur) < abs(v[i])) {
                            st.push(v[i]);
                        }
                        
                        finish = false;
                    } else {
                        st.push(v[i]);
                    }
                }
            }
            
            vector<int> tmp;
            while(!st.empty()) {
                tmp.push_back(st.top());
                st.pop();
            }
            reverse(tmp.begin(), tmp.end());
            v = tmp;
        }
        
        return v;
    }
};
