class Solution {
public:
    //求最长公共子序列的变形题目
    //time complexity O(N*M*M)
    int minDeletionSize(vector<string>& A) {
        int M = A[0].length();
        int n = A.size();
        int tmp = 0;
        vector<int> dp(M, 1);
        for (int i = 0; i < M; i++) {
            for (int j = 0; j < i; j++) {
                bool isValid = true;
                for (int k = 0; k < n; k++) {
                    if (A[k][i] < A[k][j]) {
                        isValid = false;
                        break;
                    }
                }
                
                if (isValid) {
                    dp[i] = max(dp[i], 1 + dp[j]);
                }
            }
        }
        
        for (int d : dp) {
            tmp = max(tmp, d);
        }
        
        return M - tmp;
    }
};
