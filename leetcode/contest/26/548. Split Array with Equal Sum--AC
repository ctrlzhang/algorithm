class Solution {
public:
    bool splitArray(vector<int>& nums) {
        int n = nums.size();
        vector<int> sumVec;
        sumVec.resize(n, 0);
        
        sumVec[0] = nums[0];
        for(int i=1; i<n; i++) {
            sumVec[i] = sumVec[i-1] + nums[i];
        }
        
        /*
        for(int i=0; i<n; i++) {
            for(int j=i; j<n; j++) {
                vv[i][j] = sumVec[j] - sumVec[i-1];
            }
        }*/
    
        set<int> sumSet;
        for(int j=3; j<n-3; j++) {
            sumSet.clear();
            for(int i=1; i+1<j; i++) {
                int ls = sumVec[i-1] - sumVec[0] + nums[0];
                int rs = sumVec[j-1] - sumVec[i+1] + nums[i+1];
                if(ls == rs) sumSet.insert(ls);        
            }
            
            for(int k=j+2; k<n-1; k++) {
                int ls = sumVec[k-1] - sumVec[j+1] + nums[j+1];
                int rs = sumVec[n-1] - sumVec[k+1] + nums[k+1];
                if(ls == rs && sumSet.find(ls) != sumSet.end()) {
                    return true;
                }
            }
        }
        
        return false;
    }
};
