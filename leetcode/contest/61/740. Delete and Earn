//TLE
class Solution {
public:
    //dfs
    int deleteAndEarn(vector<int>& nums) {
        int n = nums.size();
        map<int, int> dp;
        int ans = 0;
        for(int i = 0; i < n; i++) {
            if(dp.find(i) == dp.end()) {
                //clean
                vector<int> tmp;
                bool first = true;
                for(int j = 0; j < n; j++) {
                    if(nums[j] != nums[i] + 1 && nums[j] != nums[i] - 1) {
                        if(first && nums[j] == nums[i]) {
                            first = false;
                            continue;
                        }
                        tmp.push_back(nums[j]);
                    }
                }
                
                int ret = nums[i] + deleteAndEarn(tmp);
                dp[i] = ret;
                if(ret > ans) ans = ret;
            }
        }
        
        return ans;
    }
};
