class Solution {
    public int maxScore(String s) {
        int n = s.length();
        int[] zero = new int[n];
        int[] one = new int[n];
        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == '0') {
                if (i == 0) {
                    zero[i] = 1;
                } else {
                    zero[i] = zero[i - 1] + 1;
                }
            } else {
                if (i - 1 >= 0) {
                    zero[i] = zero[i - 1];
                }
            }
        }
        
        
        for (int i = n - 1; i >= 0; i--) {
            if (s.charAt(i) == '1') {
                if (i == n - 1) {
                    one[i] = 1;
                } else {
                    one[i] = one[i + 1] + 1;
                }
            } else {
                if (i + 1 < n) {
                    one[i] = one[i + 1];
                }
            }
        }
            
        int ans = 0;
        for (int i = 0; i < n - 1; i++) {
            ans = Math.max(ans, zero[i] + one[i + 1]);
        }
        return ans;
    }
}

//
class Solution {
    public int maxScore(String s) {
        int one = 0;
        char[] data = s.toCharArray();
        for (char c : data) {
            if (c == '1') ++one;
        }
        
        int zero = 0;
        int ans = 0;
        for (int i = 1; i < data.length; i++) {
            if (data[i - 1] == '0') zero++;
            if (data[i - 1] == '1') one--;
            
            ans = Math.max(ans, one + zero);
        }
        return ans;
    }
}
