class Solution {
public:
    int findLength(vector<int>& A, vector<int>& B) {
        int la = A.size();
        int lb = B.size();
        int dp[la + 1][lb + 1];
        memset(dp, 0, sizeof(dp));
        int ans = 0;
        for(int i = 1; i <= la; i++) {
            for(int j = 1; j <= lb; j++) {
                if(A[i - 1] == B[j - 1]) {
                    dp[i][j] = 1 + dp[i - 1][j - 1];
                } else {
                    dp[i][j] = 0;
                }
                
                ans = max(ans, dp[i][j]);
            }
        }
        
        return ans;
    }
};

class Solution {
public:
    int findLength(vector<int>& A, vector<int>& B) {
        int la = A.size();
        int lb = B.size();
        vector<int> dp(lb + 1, 0);
        int ans = 0;
        for(int i = 1; i <= la; i++) {
            vector<int> ndp(lb + 1, 0);
            for(int j = 1; j <= lb; j++) {
                if(A[i - 1] == B[j - 1]) {
                    ndp[j] = 1 + dp[j - 1]; 
                } else {
                    ndp[j] = 0;
                }
                
                ans = max(ans, ndp[j]);
            }
            
            dp = ndp;
        }
        
        return ans;
    }
};
