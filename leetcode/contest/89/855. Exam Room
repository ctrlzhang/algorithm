//TLE array
class ExamRoom {
public:
    vector<int> seats;
    ExamRoom(int N) {
        for (int i = 0; i < N; i++) {
            seats.push_back(0);
        }
    }
    
    int seat() {
        int maxLen = 0;
        int pos = -1;
        int n = seats.size();
        int i = 0;
        while (i < n) {
            while (i < n && seats[i] == 1) ++i;
            if (i == n) break;
            int j = i;
            while (j + 1 < n && seats[j + 1] == 0) ++j;
            if (i == 0) {
                if (j + 1 > maxLen) {
                    maxLen = j + 1;
                    pos = 0;
                }
            } else if (j == n - 1) {
                if (j - i + 1 > maxLen) {
                    maxLen = j - i + 1;
                    pos = n - 1;
                }
            } else {
                int distance = j - i + 1;
                //cout<<distance<<" "<<i<<" "<<j<<endl;
                int len = (distance + 1) / 2;
                if (len > maxLen) {
                    maxLen = len;
                    pos = i + len - 1;
                }
            }
            
            i = j + 1;
        }
        
        if (pos != -1) {
            seats[pos] = 1;
        }
        return pos;
    }
    
    void leave(int p) {
        seats[p] = 0;
    }
};

/**
 * Your ExamRoom object will be instantiated and called as such:
 * ExamRoom obj = new ExamRoom(N);
 * int param_1 = obj.seat();
 * obj.leave(p);
 */
 
 
 //set 
 class ExamRoom {
public:
    int size;
    //ordered
    set<int> seats;
    ExamRoom(int N) {
        size = N;
        seats.insert(0);
        seats.insert(size + 1);
    }
    
    int seat() {
        int pos = -1;
        int maxLen = 0;
        int prev = 0;
        for (int idx : seats) {
            if (idx == 0) continue;
            //cout<<"size="<<size<<" "<<"idx="<<idx<<endl;
            int diff = idx - prev - 1;
            if (prev == 0) {
                if (diff > maxLen) {
                    maxLen = diff;
                    pos = 1;
                }
            } else if (idx == size + 1) {
                if (diff > maxLen) {
                    maxLen = diff;
                    pos = size;
                }
            } else {
                int len = (diff + 1) / 2;
                if (len > maxLen) {
                    maxLen = len;
                    pos = prev + len;
                }
            }
            
            //cout<<"pos="<<pos<<endl;
            prev = idx;
        }
        
        seats.insert(pos);
        return pos - 1;
    }
    
    void leave(int p) {
        seats.erase(p + 1);
    }
};

/**
 * Your ExamRoom object will be instantiated and called as such:
 * ExamRoom obj = new ExamRoom(N);
 * int param_1 = obj.seat();
 * obj.leave(p);
 */
