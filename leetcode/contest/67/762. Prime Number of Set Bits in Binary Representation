class Solution {
public:
    int countPrimeSetBits(int L, int R) {
        int ans = 0;
        for(int x = L; x <= R; x++) {
            int cnt = 0;
            int t = x;
            while(t) {
                cnt += t & 1;
                t >>= 1;
            }
            
            if(isPrim(cnt)) {
                ans++;
            }
        }
        
        return ans;
    }
    
    bool isPrim(int x) {
        if(x == 1) {
            return false;
        }
        
        for(int k = 2; k * k <= x; k++) {
            if(x % k == 0) {
                return false;
            }
        }
        
        return true;
    }
};

class Solution {
    public int countPrimeSetBits(int L, int R) {
        int ans = 0;
        for(int x = L; x <= R; x++) {
            int cnt = 0;
            int t = x;
            while(t > 0) {
                cnt += t & 1;
                t >>= 1;
            }
            
            if(isPrim(cnt)) {
                ans++;
            }
        }
        return ans;
    }
    
    boolean isPrim(int x) {
        if(1 == x) {
            return false;
        }
        
        for(int k = 2; k * k <= x; k++) {
            if(x % k == 0) {
                return false;
            }
        }
        
        return true;
    }
}
