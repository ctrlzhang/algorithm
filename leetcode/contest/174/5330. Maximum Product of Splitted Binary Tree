/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    private List<Long> nodes = new ArrayList<>();
    public int maxProduct(TreeNode root) {
        int mod = 1000000007;
        long totalSum = sum(root);
        // System.out.println("totalSum=" + totalSum);
        
        long ans = 0;
        int k = 0;
        while (k < nodes.size()) {
            if (nodes.get(k) != 0) {
                // System.out.println("nodes[k]=" + nodes[k]);
                ans = Math.max(ans, nodes.get(k) * (totalSum - nodes.get(k)));
            }
            // System.out.println("k=" + k);
            ++k;
        }
        
        return (int) (ans % mod);
    }
    
    private long sum(TreeNode root) {
        if (root == null) {
            return 0;
        }
        long sum = root.val;
        long leftSum = sum(root.left);
        long rightSum = sum(root.right);
        sum += leftSum + rightSum;
        nodes.add(sum);
        return sum;
    }
}
