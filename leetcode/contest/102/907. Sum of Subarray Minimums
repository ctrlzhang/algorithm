class Solution {
public:
    //1 2 3 4
    //dp[i][j] = min{dp[i][j - 1], a[j]}
    int sumSubarrayMins(vector<int>& A) {
        int n = A.size();
        int ans = 0;
        int mod = 1e9 + 7;
        
        vector<int> dp(1 + n, 0);
        for (int i = 1; i <= n; i++) {
            dp[i] = A[i - 1];
            ans = (ans + dp[i]) % mod;
        }
        
        for (int l = 2; l <= n; l++) {
            vector<int> next(1 + n, 0);
            for (int i = 1; i + l - 1 <= n; i++) {
                int j = i + l - 1;
                next[i] = min(dp[i], A[j - 1]);
            }
            
            for (int i = 1; i <= n; i++) {
                ans = (ans + next[i]) % mod;
            }
            
            dp = next;
        }
        
        return ans;
    }
};

