/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        int n = nums.size();
        return helper(nums, 0, n-1);
    }
    
    TreeNode* helper(vector<int>& nums, int s, int e) {
        if(s > e) return NULL;
        int idx = 0;
        int max = INT_MIN;
        for(int i=s; i<=e; i++) {
            if(nums[i] >= max) {
                max = nums[i];
                idx = i;
            }
        }
        
        TreeNode *root = new TreeNode(nums[idx]);
        root->left = helper(nums, s, idx-1);
        root->right = helper(nums, idx+1, e);
        return root;
    }
};
