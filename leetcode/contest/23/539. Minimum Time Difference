class Solution {
public:
    int findMinDifference(vector<string>& timePoints) {
        int n = timePoints.size();
        if(n <= 1) return 0;
        
        vector<int> vMin(2*n, 0);
        for(int i = 0, j = 0; i < n; i++, j+=2) {
            std::size_t idx = timePoints[i].find_first_of(':');
            string hour = timePoints[i].substr(0, 2);
            string min = timePoints[i].substr(idx+1, 2);
            int iHour = atoi(hour.c_str());
            int iMin = atoi(min.c_str());
            vMin[j] = iHour * 60 + iMin;
            vMin[j+1] = vMin[j] + 1440;
        }
        
        sort(vMin.begin(), vMin.end());
        
        int result = 100000000;
        for(int i = 1; i<vMin.size(); i++) {
            if(vMin[i] - vMin[i-1] < result) {
                result = vMin[i] - vMin[i-1];
            }
        }
        
        return result;
    }
};
