class Solution {
public:
    int dx[4] = {0, 0, 1, -1};
    int dy[4] = {1, -1, 0, 0};
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int r = grid.size();
        if(0 == r) return 0;
        int c = grid[0].size();
        if(0 == c) return 0;
        
        int ans = 0;
        for(int i=0; i<r; i++) {
            for(int j=0; j<c; j++) {
                int result = dfs(grid, i, j, r, c);
                ans = max(result, ans);
            }
        }
        
        return ans;
    }
    
    int dfs(vector<vector<int>>& grid, int i, int j, int row, int col) {
        if(i<0 || i>=row || j<0 || j>=col) return 0;
        if(grid[i][j] == 0) return 0;
        int result = 1;
        grid[i][j] = 0;
        for(int k=0; k<4; k++) {
            int x = i + dx[k];
            int y = j + dy[k];
            result += dfs(grid, x, y, row, col);
        }
        
        return result;
    }
    
};
