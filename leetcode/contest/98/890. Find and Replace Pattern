class Solution {
public:
    vector<string> findAndReplacePattern(vector<string>& words, string pattern) {
        vector<string> ans;
        for (string s : words) {
            unordered_map<char, char> pMap;
            unordered_map<char, char> dMap;
            bool find = true;
            for (int i = 0; i < s.length(); i++) {
                //cout<<s[i]<<" "<<pattern[i]<<endl;
                if (pMap.find(s[i]) == pMap.end()) {
                    if (dMap.find(pattern[i]) != dMap.end()) {
                        find = false;
                        break;
                    } else {
                        pMap[s[i]] = pattern[i];
                        dMap[pattern[i]] = s[i];
                    }
                } else {
                    if (pMap[s[i]] != pattern[i]) {
                        find = false;
                        break;
                    }
                }
            }
            
            if (find) {
                ans.push_back(s);
            }
        }
        return ans;
    }
};
