class Solution {
public:
/**
 * 用除法，不要用乘法, 复杂度o(logN) 
 */
    bool isPerfectSquare(int num) {
        return helper(num, 1, num);
    }
    
    bool helper(int num, int start, int end) {
        if(start > end) return false;
        
        int mid = (start + end) / 2;
        int tmp = num / mid;
        int rem = num % mid;
        if(tmp == mid && 0 == rem) return true;
        
        if(tmp < mid) {
            return helper(num, start, mid - 1);
        }
        
        if(tmp >= mid) {
            return helper(num, mid+1, end);
        }
    }
};

class Solution {
public:
/**
 * 用除法，循环, 复杂度o(logN) 
 */
    bool isPerfectSquare(int num) {
        int low = 1, high = num;
        int mid = 0, quot = 0, remain = 0;
        while(low <= high) {
            mid = (low + high) / 2;
            quot = num / mid;
            remain = num % mid;
            
            if(remain == 0 && quot == mid) return true;
            if(quot >= mid) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        
        return false;
    }
};


