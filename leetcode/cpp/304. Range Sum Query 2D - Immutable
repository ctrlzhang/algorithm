class NumMatrix {
public:
    vector<vector<int>> dp;
    int row;
    int col;
    NumMatrix(vector<vector<int>> matrix) {
        do{
            row = matrix.size();
            if(0 == row) break;

            col = matrix[0].size();
            if(0 == col) break;

            vector<vector<int>> arr(row, vector<int>(col, 0));
            dp = arr;
            dp[0][0] = matrix[0][0];
            for(int i=1; i<row; i++) {
                dp[i][0] = matrix[i][0] + dp[i-1][0];
            }

            for(int j=1; j<col; j++) {
                dp[0][j] = matrix[0][j] + dp[0][j-1];
            }

            for(int i=1; i<row; i++) {
                for(int j=1; j<col; j++) {
                    dp[i][j] = matrix[i][j] + dp[i-1][j] + dp[i][j-1] - dp[i-1][j-1];
                }
            }
        }while(0);
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) {
        if(0 == row || 0 == col) return 0;
        if(row1 < 0 || col1 < 0 || row2 < 0 || col2 < 0) return 0;
        if(row1 >= row || col1 >= col || row2 >= row || col2 >= col) return 0;
        
        int ans = dp[row2][col2];
        if(row1 >= 1) {
            ans = ans - dp[row1-1][col2];
            if(col1 >= 1) {
                ans = ans - dp[row2][col1-1]  + dp[row1-1][col1-1];
            }
        } else {
            if(col1 >= 1) {
                ans = ans - dp[row2][col1-1];
            }
        }

        return ans;
    }
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix obj = new NumMatrix(matrix);
 * int param_1 = obj.sumRegion(row1,col1,row2,col2);
 */
