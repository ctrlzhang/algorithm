/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
		ListNode *prev = new ListNode(-1);
		prev->next = head;
		ListNode *dummy = prev;
		ListNode *last = prev;
		
		while (NULL != head) {
			if (head->val < x) {
				if(last == prev) {
					prev = head;
					last = head;
					head = head->next;
				} else {
					ListNode *tmp = head;
					head = head->next;
					last->next = tmp->next;
					tmp->next = prev->next;
					prev->next = tmp;
					prev = tmp;
				}
			} else {
				last = head;
				head = head->next;
			}
		}
		
		return dummy->next;
    }
};

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        ListNode *node1 = new ListNode(-1);
        ListNode *node2 = new ListNode(-1);
        ListNode *p1 = node1;
        ListNode *p2 = node2;
        while(head) {
            if(head->val < x) {
                p1->next = head;
                p1 = p1->next;
            } else {
                p2->next = head;
                p2 = p2->next;
            }
            
            head = head->next;
        }
        
        p2->next = NULL;
        p1->next = node2->next;
        return node1->next;
    }
};
