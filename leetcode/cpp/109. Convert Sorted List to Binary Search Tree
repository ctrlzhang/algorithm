/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedListToBST(ListNode* head) {
		if(NULL == head) return NULL;
		
		vector<ListNode*> vecNode;
		while (head) {
			vecNode.push_back(head);
			head = head->next;
		}
		
		int n = vecNode.size();
		return construct(vecNode, 0, n - 1);
    }
	
	TreeNode* construct(vector<ListNode*> &v, int start, int end) {
		if(start > end) return NULL;
		int mid = (start + end) / 2;
		ListNode *node = v[mid];
		TreeNode *root = new TreeNode(node->val);
		root->left = construct(v, start, mid - 1);
		root->right = construct(v, mid + 1, end);
		return root;
	}
};
