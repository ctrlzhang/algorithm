class Solution {
public:
    set<vector<int>> ans;
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        dfs(nums, 0);
        vector<vector<int>> result(ans.begin(), ans.end());
        return result;
    }
    
    void dfs(vector<int>& nums, int start) {
        if(start == nums.size() - 1) {
            ans.insert(nums);
            return;
        }
        
        for(int i = start; i < nums.size(); i++) {
            swap(nums[start], nums[i]);
            dfs(nums, start + 1);
            swap(nums[start], nums[i]);
        }
    }
};
