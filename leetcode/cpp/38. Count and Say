class Solution {
public:
    string countAndSay(int n) {
        if(n == 0) return "";
        string s = "1";
        if(n == 1) return s;
        int i = 2;
        while(i <= n) {
            string tmp = "";
            char cur = s[0];
            int k = 0;
            int cnt = 0;
            while(k < s.length()) {
                while(k < s.length() && s[k] == cur) {
                    k++;
                    cnt++;
                }
                
                tmp += output(cur, cnt);
                if(k != s.length()) {
                    cur = s[k];
                    cnt = 0;
                }
            }
            
            s = tmp;
            i++;
        }
        return s;
    }
    
    string output(char c, int cnt) {
        return to_string(cnt) + c;
    }
};

class Solution {
public:
    string countAndSay(int n) {
        if(n == 0) return "";
        string s = "1";
        if(n == 1) return s;
        int k = 2;
        while(k <= n) {
            string tmp = "";
            for(int i = 0; i < s.length(); i++) {
                int cnt = 1;
                while(i + 1 < s.length() && s[i] == s[i + 1]) {
                    i++;
                    cnt++;
                }
                tmp += output(s[i], cnt);
            }
            
            s = tmp;
            k++;
        }
        return s;
    }
    
    string output(char c, int cnt) {
        return to_string(cnt) + c;
    }
};
