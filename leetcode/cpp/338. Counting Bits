class Solution {
public:
    vector<int> countBits(int num) {
        vector<int> ans;
        for(int i=0; i<=num; i++) {
            int t = i;
            int count = 0;
            while(t > 0) {
                t = t & (t-1);
                count++;
            }
            
            ans.push_back(count);
        }
        
        return ans;
    }
};


class Solution {
//dp[i] = dp[cur] + dp[i-cur]
//cur是i之前的最近的一个2次幂
public:
    vector<int> countBits(int num) {
        vector<int> ans(num+1, 0);
        ans[0] = 0;
        int cur = 0;
        for(int i=1; i<=num; i++) {
            if((i & (i - 1)) == 0) {
                ans[i] = 1;
                cur = i;
            } else {
                ans[i] = ans[cur] + ans[i - cur];
            }
        }
        
        return ans;
    }
};
