/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(NULL == l1) return l2;
        if(NULL == l2) return l1;
        
        ListNode *head = NULL;
        ListNode *tail = NULL;
        int seq = 0;
        
        while(l1 != NULL && l2 != NULL) {
            if(l1->val < l2->val) {
                if(0 == seq) {
                    head = l1;
                    tail = l1;
                } else {
                    tail->next = l1;
                    tail = tail->next;
                }
                
                l1 = l1->next;
            } else {
                if(0 == seq) {
                    head = l2;
                    tail = l2;
                } else {
                    tail->next = l2;
                    tail = tail->next;
                }
                
                l2 = l2->next;
            }
            
            seq++;
        }
        
        if(NULL == l1) {
            tail->next = l2;
        } else {
            tail->next = l1;
        }
        
        return head;
    }
};
