/**
思路: 从根节点查找和为sum的路径， 等价于从子树中查找和为 sum - root->val 的
helper(root, sum) ==>  helper(root->left, sum-root->val) 和 helper(root->right, sum-root->val);
**/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool hasPathSum(TreeNode* root, int sum) {
        return helper(root, sum);
    }
    
    bool helper(TreeNode* root,int sum) {
        if(NULL == root) return false;
        
        if(root->left == NULL && root->right == NULL) {
            if(sum == root->val) return true;
            return false;
        }
        
        bool bl = helper(root->left , sum - root->val);
        bool br = helper(root->right, sum - root->val);
        
        return bl || br;
    }
};
