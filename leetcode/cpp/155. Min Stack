class MinStack {
public:
    /** initialize your data structure here. */
    int data[20000] = {0};
    int minV[20000] = {0};
    int dataSize = 0;
    int minSize = 0;

    MinStack() {
    }
    
    void push(int x) {
        data[dataSize] = x;
        dataSize++;
        
        if(minSize == 0) {
            minV[0] = x;
            minSize = 1;
        } else {
            if(x <= minV[minSize - 1]) {
                minV[minSize] = x;
                minSize++;
            }
        }
    }
    
    void pop() {
        if(dataSize == 0) return;
        int oldTop = data[dataSize - 1];
        dataSize--;
        if(minSize > 0) {
            if(minV[minSize - 1] == oldTop) {
                minSize--;
            }
        }
    }
    
    int top() {
        if(dataSize <= 0) return 0;
        return data[dataSize - 1];
    }
    
    int getMin() {
        if(minSize <= 0) return 0;
        return minV[minSize - 1];
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
