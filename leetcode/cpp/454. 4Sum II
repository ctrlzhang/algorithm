class Solution {
public:
/**
 * 思路: 相当于计算 a + b = -(c + d) 时间复杂度为o(n^2), 空间复杂度o(n^2), 使用hashmap 
 */
    int fourSumCount(vector<int>& A, vector<int>& B, vector<int>& C, vector<int>& D) {
        unordered_map<int, int> lm, rm;
        
        for(int i=0; i<A.size(); i++) {
            for(int j=0; j<B.size(); j++) {
                lm[A[i] + B[j]]++;
            }
        }
        
        for(int i=0; i<C.size(); i++) {
            for(int j=0; j<D.size(); j++) {
                rm[C[i] + D[j]]++;
            }
        }
        
        int target = 0;
        int count = 0;
        for(auto& it : lm) {
            target = it.first;
            if(rm.find(-target) != rm.end()) {
                count += it.second * rm.find(-target)->second;
            }
        }
        
        return count;
    }
};
