class Solution {
public:
    //dp[i][j] = min(dp[i-1][j-1], dp[i][j-1], dp[i-1][j]) + 1
    int maximalSquare(vector<vector<char>>& matrix) {
        int ans = 0;
        int row = matrix.size();
        if(row == 0) return 0;
        int col = matrix[0].size();
        if(col == 0) return 0;
        
        vector<vector<int>> cm(row, vector<int>(col, 0));
        for(int i=0; i<row; i++) {
            if(matrix[i][0] == '1') {
                cm[i][0] = 1;
                ans = 1;
            }
        }
        
        for(int i=0; i<col; i++) {
            if(matrix[0][i] == '1') {
                cm[0][i] = 1;
                ans = 1;
            }
        }
        
        for(int i=1; i<row; i++) {
            for(int j=1; j<col; j++) {
                if(matrix[i][j] == '1') {
                    int tmp = min(cm[i-1][j-1], cm[i][j-1]);
                    tmp = min(tmp, cm[i-1][j]);
                    cm[i][j] = tmp + 1;
                    ans = max(ans, cm[i][j]);
                }
            }
        }

        return ans * ans;
    }
};
