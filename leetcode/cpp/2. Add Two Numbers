/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(l1 == NULL) return l2;
        if(l2 == NULL) return l1;
        
        int carry = 0;
        int curVal = 0;
        int sum = 0;
        ListNode* head = NULL;
        ListNode* result = NULL;
        
        while (l1 && l2) {
            sum = carry + l1->val + l2->val;
            carry = sum / 10;
            curVal = sum % 10;
            ListNode* node = new ListNode(curVal);
            if(head == NULL) {
                head = node;
                result = node;
            } else {
                head->next = node;
                head = node;
            }
            
            l1 = l1->next;
            l2 = l2->next;
        }
        
        while(l1) {
            sum = carry + l1->val;
            carry = sum / 10;
            curVal = sum % 10;
            l1->val = curVal;
            
            head->next = l1;
            head = l1;
            l1 = l1->next;
            
            if(0 == carry) break;
        }
        
        while(l2) {
            sum = carry + l2->val;
            carry = sum / 10;
            curVal = sum % 10;
            l2->val = curVal;
            
            head->next = l2;
            head = l2;
            l2 = l2->next;
            
            if(0 == carry) break;
        }
        
        if(carry) {
            head->next = new ListNode(carry);
        }
        
        return result;
    }
};
