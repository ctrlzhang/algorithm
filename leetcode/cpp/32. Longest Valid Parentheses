class Solution {
public:
    int longestValidParentheses(string s) {
        stack<int> st;
        for(int i = 0; i < s.length(); i++) {
            if(s[i] == '(') {
                st.push(i);
            } else {
                if(st.empty()) {
                    st.push(i);
                } else {
                    if(s[st.top()] == '(') {
                        st.pop();
                    } else {
                        st.push(i);
                    }
                }
            }
        }
        
        int a = s.length();
        int ans = 0;
        while(!st.empty()) {
            int b = st.top();
            ans = max(ans, a - b - 1);
            a = b;
            st.pop();
        }
        
        return  max(ans, a);
    }
};
