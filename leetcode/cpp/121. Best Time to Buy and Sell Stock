class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if(0 == prices.size()) return 0;
        
        int profit = 0, min = prices[0];
        for(int i=1; i<prices.size(); i++) {
            if(prices[i] < prices[i-1]) {
                if(min > prices[i]) min = prices[i];
            } else if(prices[i] > prices[i-1]) {
                int tmp = prices[i] - min;
                if(tmp > profit) profit = tmp;
            }
        }
        
        return profit;
    }
};


class Solution {
public:
/**
 * 思路: 每次遇到一个更小的值时, profit的计算将和之前的min无关
 * 
 */ 
    int maxProfit(vector<int>& prices) {
        int min = INT_MAX; 
        int max = 0;
        for(int i=0; i<prices.size(); i++) {
            min = Min(min, prices[i]);
            max = Max(max, prices[i] - min);
        }
        
        return max;
    }
    
    int Min(int a, int b) {
        return a > b ? b : a;
    }
    
    int Max(int a, int b) {
        return a > b ? a : b;
    }
};
