class MinStack {

    /** initialize your data structure here. */
    private Deque<Integer> arr = new LinkedList<>();
    private Stack<Integer> stack = new Stack<>();
    private int min = Integer.MAX_VALUE;
    public MinStack() {
        
    }
    
    public void push(int x) {
        arr.addLast(x);
        if (x <= min) {
            stack.push(x);
            min = x;
        }
    }
    
    public void pop() {
        int x = arr.peekLast();
        arr.pollLast();
        if (!stack.isEmpty() && x == stack.peek()) {
            stack.pop();
            if (stack.isEmpty()) {
                min = Integer.MAX_VALUE;
            } else {
                min = stack.peek();
            }
        }
    }
    
    public int top() {
        return arr.peekLast();
    }
    
    public int getMin() {
        return min;
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
 
 
 class MinStack {
    private class Node {
        Node next;
        int min;
        int val;
        
        Node(int val, int min) {
            this.val = val;
            this.min = min;
        }
        
        Node(int val, int min, Node next) {
            this.val = val;
            this.min = min;
            this.next = next;
        }
    }
    
    /** initialize your data structure here. */
    private Node head;
    
    public MinStack() {
    }
    
    public void push(int x) {
        if (head == null) {
            head = new Node(x, x);
        } else {
            head = new Node(x, Math.min(x, head.min), head);
        }
    }
    
    public void pop() {
        head = head.next;
    }
    
    public int top() {
        return head.val;
    }
    
    public int getMin() {
        return head.min;
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
