单调栈
- 用于求解距离当前元素最近的，比当前元素大或者小的第一个元素
- 单调栈中保存下标会比较好处理, 因为根下标可以解决重复元素的问题，同时方便计算出所找到的第一个值和当前值的距离
- 时间复杂度o(N) 空间复杂度O(N)

回文子串
- 中心扩展法, 找到中心, 然后左右扩展

BFS
- 通常用于求最短距离, 以及通过状态转换找元素
- BFS是一层层的扫描, 所以找值或者最短路径是, 通常不需要全扫
- 注意visited数组的使用
- step的使用
- 双向bfs可以使用set来实现, 但是visited数组一定要后设置, 因为双向dfs需要判断两个set里是否有出现重复元素,
如果先设置visited状态，会使得重复元素无法进到set里，导致判断不到
- 双向bfs可以用新建一个tmp set的方式来交换队列

DFS
- 代码好写, 空间复杂度比bfs低，但是通常需要全扫

回溯
- 确定选项是哪些
- 选择
- 不选择
- 恢复
- 确定终止条件

DP
- 确定当前有什么状态, 可以根据状态元素构造递推式
- 确定有哪些选择可能, 根据选择构造递推式
- 确定base case
- 确定目标解是什么, 即dp数组中值的含义是什么
- 通常维度不超过三维
- 通常用于求最值等优化问题
