class Solution {
    public String nextClosestTime(String time) {
        int cur = 60 * Integer.parseInt(time.substring(0, 2));
        cur += Integer.parseInt(time.substring(3));
        
        Set<Integer> allowed = new HashSet();
        for (char c : time.toCharArray()) {
            if (c != ':') {
                allowed.add(c - '0');
            }
        }
        
        while (true) {
            cur = (cur + 1) % 1440;
            int[] digits = new int[] {
                cur / 60 / 10, cur / 60 % 10, cur % 60 / 10, cur % 60 % 10 
            };
            
            search : {
                for (int d : digits) {
                    if (!allowed.contains(d)) {
                        break search;
                    }
                }
                
                return String.format("%02d:%02d", cur / 60, cur % 60);
            }
        }
    }
}

class Solution {
    public String nextClosestTime(String time) {
//         int cur = 60 * Integer.parseInt(time.substring(0, 2));
//         cur += Integer.parseInt(time.substring(3));
        
//         Set<Integer> allowed = new HashSet();
//         for (char c : time.toCharArray()) {
//             if (c != ':') {
//                 allowed.add(c - '0');
//             }
//         }
        
//         while (true) {
//             cur = (cur + 1) % 1440;
//             int[] digits = new int[] {
//                 cur / 60 / 10, cur / 60 % 10, cur % 60 / 10, cur % 60 % 10 
//             };
            
//             search : {
//                 for (int d : digits) {
//                     if (!allowed.contains(d)) {
//                         break search;
//                     }
//                 }
                
//                 return String.format("%02d:%02d", cur / 60, cur % 60);
//             }
//         }
        int cur = 60 * Integer.parseInt(time.substring(0, 2));
        cur += Integer.parseInt(time.substring(3));
        Set<Integer> allowed = new HashSet<>();
        for (char c : time.toCharArray()) {
            if (c != ':') {
                allowed.add(c - '0');
            }
        }
        
        while (true) {
            cur = (cur + 1) % 1440;
            int[] data = new int[] {
                cur / 60 / 10, cur / 60 % 10, cur % 60 / 10, cur % 60 % 10
            };
            
            Boolean find = true;
            for (int d : data) {
                if (!allowed.contains(d)) {
                    find = false;
                    break;
                }
            }
            
            if (find) {
                return String.format("%02d:%02d", cur / 60, cur % 60);
            }
        }
    }
}

