class Solution {
    // binary search
    // lower bound Math.abs(pos) - 2
    // upper bound Math.abs(pos) - 1
    public List<List<String>> suggestedProducts(String[] products, String searchWord) {
        List<List<String>> ans = new ArrayList<>();
        int n = products.length;
        Arrays.sort(products);
        String key = "";
        for (char ch : searchWord.toCharArray()) {
            key += ch;
            int pos = Arrays.binarySearch(products, key);
            // System.out.println("pos=" + pos);
            if (pos < 0) {
                pos = Math.abs(pos) - 2 + 1;
            }
            
            List<String> tmpRet = new ArrayList<>();
            for (int i = 0; i <= 2 && pos + i < n; i++) {
                if (products[pos + i].startsWith(key)) {
                    tmpRet.add(products[pos + i]);
                } else {
                    break;
                }
            }
            ans.add(tmpRet);
        }
        return ans;
    }
}
