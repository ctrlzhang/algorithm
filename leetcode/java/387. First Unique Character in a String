class Solution {
    public int firstUniqChar(String s) {
        //1.edge case
        //2.use a map to store the already existed characters
        //3.go through string and use the map
        
        //1.edge case
        if (s == null || s.isEmpty()) {
            return -1;
        }
        
        //2.map
        Map<Character, Integer> map = new HashMap<>();
        for (char c : s.toCharArray()) {
            int cnt = map.getOrDefault(c, 0);
            map.put(c, cnt + 1);
        }
        
        //3.find the first
        for (int i = 0; i < s.length(); i++) {
            if (map.get(s.charAt(i)) == 1) return i;
        }
        
        return -1;
    }
}

class Solution {
    public int firstUniqChar(String s) {
        //1.edge case
        if (s == null || s.isEmpty()) return -1;
        
        int[] map = new int[26];
        for (char c : s.toCharArray()) {
            map[c - 'a']++;
        }
        
        for (int i = 0; i < s.length(); i++) {
            if (map[s.charAt(i) - 'a'] == 1) return i;
        }
        
        return -1;
    }
}
