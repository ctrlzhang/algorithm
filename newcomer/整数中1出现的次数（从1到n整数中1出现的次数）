class Solution {
public:
    //recurisive
    //0-9 1
    //0-99 10**2/10
    //0-999 10***3/10
    int NumberOf1Between1AndN_Solution(int n)
    {
        if(n < 10) {
            if(n < 1) return 0;
            return 1;
        }
        vector<int> dp;
    	int t = n;
        while(t) {
            dp.push_back(t % 10);
            t /= 10;
        }
        int len = dp.size();
        int next = 0;
        for(int i = len - 2; i >= 0; i--) {
            next = next * 10 + dp[i];
        }
        
        int ans = 0;
        int first = dp[len - 1];
        int total = pow(10, len - 1);//总个数
        if(first == 1) {
            ans += total / 10 * (len - 1);//总位数 = 总个数 * 单个的长度
            ans += next + 1;
        } else {
            ans += first * total / 10 * (len - 1);
            ans += total;
        }
        
        ans += NumberOf1Between1AndN_Solution(next);
        return ans;
    }
};
