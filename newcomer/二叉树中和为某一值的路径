/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};*/
class Solution {
public:
    vector<vector<int>> ans;
    
    vector<vector<int> > FindPath(TreeNode* root,int expectNumber) {
        vector<int> path;
        dfs(root, expectNumber, path, 0);
        return ans;
    }
    
    bool isLeaf(TreeNode* node) {
    	return nullptr != node && nullptr == node->left && nullptr == node->right;
	}
    
    //dfs
    void dfs(TreeNode *root, int expectNumber, vector<int>& path, int curSum) {
        if(nullptr == root) return;
        if(isLeaf(root)) {
            if(curSum + root->val == expectNumber) {
                path.push_back(root->val);
                ans.push_back(path);
                path.pop_back();
            }
        } else {
            path.push_back(root->val);
            dfs(root->left, expectNumber, path, curSum + root->val);
            dfs(root->right, expectNumber, path, curSum + root->val);
            path.pop_back();
        }
    }
};
