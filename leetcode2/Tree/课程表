//拓扑排序,检查图中是否有环
class Solution {
public:
	//topological
    bool canFinish(int numCourses, vector<pair<int, int>>& prerequisites) {
		if (numCourses <= 0) return false;
		if (prerequisites.empty()) return true;
		vector<vector<int>> graph(numCourses, vector<int>(numCourses, 0));
		vector<int> inDegree(numCourses, 0);
		for (pair<int, int> p : prerequisites) {
			graph[p.second][p.first] = 1;
			inDegree[p.first]++;
		}
		
		return topological(graph, numCourses, inDegree);
    }
	
	bool topological(vector<vector<int>>& graph, int numCourses, vector<int>& inDegree) {
		queue<int> q;
		for (int i = 0; i < numCourses; i++) {
			if (inDegree[i] == 0) {
				q.push(i);
			}
		}
		
		while (!q.empty()) {
			int cur = q.front();
			q.pop();
			
			for (int j = 0; j < numCourses; j++) {
				if (graph[cur][j] == 1) {
					graph[cur][j] = 0;
					--inDegree[j];
					if (inDegree[j] == 0) {
						q.push(j);
					}
				}
			}
		}
		
		for (int i = 0; i < numCourses; i++) {
			for (int j = 0; j < numCourses; j++) {
				if (graph[i][j]) return false;
			}
		}
		
		return true;
	}
};
