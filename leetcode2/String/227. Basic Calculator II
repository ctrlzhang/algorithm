class Solution {
public:
    int calculate(string s) {
        char sign = '+';
        stack<int> data;
        int n = s.length();
        int num = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] == ' ') continue;
            if (isdigit(s[i])) {
                num = s[i] - '0';
                while (i + 1 < n && isdigit(s[i + 1])) {
                    num = num * 10 + s[i + 1] - '0';
                    ++i;
                }
                
                if (sign == '-') data.push(-num);
                if (sign == '+') data.push(num);
                if (sign == '*') {
                    int val = data.top();
                    data.pop();
                    data.push(val * num);
                }
                if (sign == '/') {
                    int val = data.top();
                    data.pop();
                    data.push(val / num);
                }
            } else {
                sign = s[i];
            }
        }
        
        int ans = 0;
        while (!data.empty()) {
            ans += data.top();
            data.pop();
        }
        return ans;
    }
};
