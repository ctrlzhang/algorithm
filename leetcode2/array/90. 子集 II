class Solution {
public:
    //使用优先输出
    vector<vector<int>> ans;
    vector<int> path;
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        dfs(nums, 0);
        return ans;
    }
    
    void dfs(vector<int>& nums, int pos) {
        int n = nums.size();
        if (pos > n) return;
        ans.push_back(path);
        int prev = INT_MIN;
        for (int i = pos; i < n; i++) {
            if (prev == nums[i]) continue;
            prev = nums[i];
            path.push_back(nums[i]);
            dfs(nums, i + 1);
            path.pop_back();
        }
    }
};
