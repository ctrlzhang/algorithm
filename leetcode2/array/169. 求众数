class Solution {
    public int majorityElement(int[] nums) {
        Arrays.sort(nums);
        int n = nums.length;
        return nums[n / 2];
    }
}

class Solution {
    public int majorityElement(int[] nums) {
        //顺序扫
        int n = nums.length;
        int count = 1;
        int prev = nums[0];
        for (int i = 1; i < n; i++) {
            if (prev == nums[i]) {
                count++;
            } else {
                count--;
                if (0 == count) {
                    count = 1;
                    prev = nums[i];
                }
            }
        }
        return prev;
    }
}

class Solution {
    //bitcount method
    public int majorityElement(int[] nums) {
        int n = nums.length;
        int ans = 0;
        for (int k = 0; k < 32; k++) {
            int mask = (1 << k);
            int bitCnt = 0;
            for (int i = 0; i < n; i++) {
                if (0 != (nums[i] & mask)) bitCnt++;
                if (bitCnt > n / 2) {
                    ans |= mask;
                    break;
                }
            }
        }
        return ans;
    }
}
