class Solution {
    public List<List<Integer>> generate(int numRows) {
         List<List<Integer>> result = new ArrayList<>();
        if (0 >= numRows) return result;
        int[][] ans = new int[numRows][numRows];
        ans[0][0] = 1;
        List<Integer> tmp = new ArrayList<>();
        tmp.add(ans[0][0]);
        result.add(tmp);
        
        for (int i = 1; i < numRows; i++) {
            List<Integer> curArray = new ArrayList<>();
            for (int j = 0; j <= i; j++) {
                ans[i][j] = ans[i - 1][j];
                if (j >= 1) {
                    ans[i][j] += ans[i - 1][j - 1];
                }
                curArray.add(ans[i][j]);
            }
            result.add(curArray);
        }
        
        return result;
    }
}

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ans = new ArrayList<>();
        if (0 >= numRows) return ans;
        for (int i = 0; i < numRows; i++) {
            List<Integer> curArray = new ArrayList<>();
            for (int j = 0; j <= i; j++) {
                if (j == 0 || j == i) {
                    curArray.add(1);
                } else {
                    curArray.add(ans.get(i - 1).get(j - 1) + ans.get(i - 1).get(j));
                }
            }
            ans.add(curArray);
        }
        return ans;
    }
}
