class Solution {
    public List<String> summaryRanges(int[] nums) {
        int start = -1, end = -1;
        List<String> ans = new ArrayList<>();
        if (nums.length == 0) return ans;
        
        for (int d : nums) {
            if (-1 == start) {
                start = d;
                end = d;
            } else {
                if (d == end + 1) {
                    end = d;
                } else {
                    work(ans, start, end);
                    start = d;
                    end = d;
                }
            }
        }
        
        work(ans, start, end);
        return ans;
    }
    
    void work(List<String> ans, int start, int end) {
        StringBuilder sb = new StringBuilder();
        if (start == end) {
            sb.append(String.valueOf(start));
        } else {
            sb.append(String.valueOf(start));
            sb.append("->");
            sb.append(String.valueOf(end));
        }

        ans.add(sb.toString());
    }
}

class Solution {
public:
    vector<string> summaryRanges(vector<int>& nums) {
        vector<string> ans;
        if (nums.empty()) return ans;
        
        int start = nums[0], end = nums[0];
        for (int i = 1; i < nums.size(); i++) {
           if (nums[i] == end + 1) {
               end = nums[i];
           } else {
                work(ans, start, end);
                end = nums[i];
                start = nums[i];
           }
        }
        
        work(ans, start, end);
        return ans;
    }
    
    void work(vector<string>& ans, int start, int end) {
        string tmp = "";
        if (start == end) {
            tmp = to_string(start);
        } else {
            tmp += to_string(start);
            tmp += "->";
            tmp += to_string(end);
        }
        ans.push_back(tmp);
    }
};
