class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int l = m - 1, r = n - 1;
        for (int k = m + n - 1; k >=0; k--) {
            if (l >= 0 && r >= 0 ) {
                if(nums1[l] >= nums2[r]) {
                    nums1[k] = nums1[l];
                    l--;
                } else {
                    nums1[k] = nums2[r];
                    r--;
                }
            } else {
                if(l >= 0) {
                    nums1[k] = nums1[l];
                    l--;
                } else {
                    nums1[k] = nums2[r];
                    r--;
                }
            }
        }
    }
}

class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int l = m - 1, r = n - 1;
        for (int k = m + n - 1; k >= 0; k--) {
            if (l >= 0 && r >= 0) {
                if (nums1[l] >= nums2[r]) {
                    nums1[k] = nums1[l];
                    l--;
                } else {
                    nums1[k] = nums2[r];
                    r--;
                }
            } else {
                if (l >= 0) {
                    nums1[k] = nums1[l];
                    l--;
                } else {
                    nums1[k] = nums2[r];
                    r--;
                }
            }
        }
    }
};
