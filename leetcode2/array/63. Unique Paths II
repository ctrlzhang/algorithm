class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int row = obstacleGrid.length;
        if(row <= 0) return 0;
        int col = obstacleGrid[0].length;
        if(col <= 0) return 0;
        
        if(obstacleGrid[row - 1][col - 1] == 1) return 0;
        int[][] dp = new int[row][col];
        dp[row - 1][col - 1] = 1;
        for(int i = row - 1; i >= 0; i--) {
            for(int j = col - 1; j >= 0; j--) {
                if(obstacleGrid[i][j] == 1) {
                    dp[i][j] = 0;
                } else {
                    if(i + 1 < row && j < col) {
                        dp[i][j] += dp[i + 1][j];
                    }
                    
                    if(i < row && j + 1 < col) {
                        dp[i][j] += dp[i][j + 1];
                    }
                }
            }
        }
        
        return dp[0][0];
    }
}
