class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> prev = new ArrayList<>();
        if (0 > rowIndex) return prev;
        for (int i = 0; i <= rowIndex; i++) {
            List<Integer> cur = new ArrayList<>();
            for (int j = 0; j <= i; j++) {
                if (j == 0 || j == i) {
                    cur.add(1);
                } else {
                    cur.add(prev.get(j - 1) + prev.get(j));
                }
            }
            
            prev = cur;
        }
        
        return prev;
    }
}

class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> result = new ArrayList<>();
        if (0 > rowIndex) return result;
        int[] ans = new int[rowIndex + 1];
        ans[0] = 1;
        for (int i = 1; i <= rowIndex; i++) {
            for (int j = i; j >= 1; j--) {
                ans[j] += ans[j - 1];
            }
        }
        
        for (int i = 0; i <= rowIndex; i++) {
            result.add(ans[i]);
        }
        
        return result;
    }
}
