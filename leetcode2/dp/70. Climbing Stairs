class Solution {
    //dp[n] = dp[n - 1] + dp[n - 2]
    //dp[1] = 1
    //dp[2] = 2
    public int climbStairs(int n) {
        int a = 1;
        int b = 2;
        if (n == 1) return a;
        if (n == 2) return b;
        int t = 0;
        for (int i = 3; i <= n; i++) {
            t = a + b;
            a = b;
            b = t;
        }
        return t;
    }
}

class Solution {
    public int climbStairs(int n) {
        int[] dp = new int[n];
        if (1 == n) return 1;
        if (2 == n) return 2;
        dp[0] = 1;
        dp[1] = 2;
        for (int i = 2; i < n; i++) {
            dp[i] = dp[i - 1] + dp[i - 2];
        }
        return dp[n - 1];
    }
}
