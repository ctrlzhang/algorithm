/**
 * Definition of ListNode
 * class ListNode {
 * public:
 *     int val;
 *     ListNode *next;
 *     ListNode(int val) {
 *         this->val = val;
 *         this->next = NULL;
 *     }
 * }
 */


class Solution {
public:
    /*
     * @param head: The first node of linked list.
     * @return: The head of linked list.
     */
    ListNode * insertionSortList(ListNode * head) {
        // write your code here
        if(nullptr == head) return head;
        ListNode *nh = new ListNode(INT_MIN);
        ListNode *pre = nullptr;
        ListNode *cur = nullptr;
        while(head) {
            cur = nh;
            while(cur && cur->val <= head->val) {
                pre = cur;
                cur = cur->next;
            }
            
            if(cur == nullptr) {
                ListNode *tmp = head;
                pre->next = tmp;
                head = head->next;
                tmp->next = nullptr;
            } else {
                ListNode *tmp = head;
                head = head->next;
                tmp->next = cur;
                pre->next = tmp;
            }
        }
        
        return nh->next;
    }
};
