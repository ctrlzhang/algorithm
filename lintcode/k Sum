class Solution {
public:
    /*
     * @param A: An integer array
     * @param k: A positive integer (k <= length(A))
     * @param target: An integer
     * @return: An integer
     */
    int kSum(vector<int> A, int k, int target) {
        if(k < 1) return 0;
        if(1 == k) {
            for(int i = 0; i < A.size(); i++) {
                if(A[i] == target) return 1;
            }
            
            return 0;
        }
        
        // write your code here
        sort(A.begin(), A.end());
        return helper(A, 0, k, target);
    }
    
    int helper(vector<int>& A, int st, int k, int target) {
        int ans = 0;
        if(k <= 1 || target <= 0) return 0;
        
        if(2 == k) {
            int i = st, j = A.size() - 1;
            while(i < j) {
                if(A[i] + A[j] == target) {
                    i++;
                    j--;
                    ans++;
                } else if(A[i] + A[j] > target) {
                    j--;
                } else {
                    i++;
                }
            }
            
            return ans;
        }
        
        int n = A.size();
        for(int i = st; i < n; i++) {
            ans += helper(A, i + 1, k - 1, target - A[i]);
        }
        
        return ans;
    }
};
